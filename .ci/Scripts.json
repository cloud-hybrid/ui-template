{
    "preinstall": "node .CI-CD/Pre-Installation.js",
    "typescript-clean": "bash -c \"rm -f -r @Types\"",
    "compile": "yarn run typescript-clean && tsc --project ./Configuration/TS-Configuration.json",
    "compile-types": "npx tsc",
    "distribution": "git add --all --force ./build && git push",
    "build": "CI=false node .CI-CD/Build.js",
    "sass": "sass --watch ./Source",
    "scss": "sass --watch ./Source",
    "ci-check": "yarn format:diff",
    "clean": "yarn cache clean && rm -r -f ./node_modules && yarn install",
    "clean-css": "find ./Source -type f -name \"*.css\" && find ./Source -type f -name \"*.css\" -delete",
    "clean-css-maps": "find ./Source -type f -name \"*.css.map\" && find ./Source -type f -name \"*.css.map\" -delete",
    "format": "prettier --write \"**/*.{js,md,scss}\"",
    "format-list-different": "prettier --list-different \"**/*.{js,md,scss}\"",
    "format-staging": "prettier --write",
    "lint": "eslint --ext js,jsx Source/",
    "lint-fix": "eslint --fix --ext js,jsx --ignore-pattern 'node_modules' Source/**/*.js",
    "start": "node .CI-CD/Start.js",
    "start:url-service": "node .CI-CD/Start.js",
    "module:url-service": "cd ./Modules/URL-Service && yarn && yarn install && yarn start",
    "test": "jest",
    "patch": "node ./Modules/CLI/Version.js --Increment --Write --Patch",
    "minor": "node ./Modules/CLI/Version.js --Increment --Write --Minor",
    "major": "node ./Modules/CLI/Version.js --Increment --Write --Major",
    "archive": "node Modules/CLI --archive",
    "add-workspace": "npm init -w -- ",
    "workspaces": "yarn workspaces list --json",
    "link-design-system": "bash -c \"ln -s ${PWD}/.Yarn/unplugged/carbon-components-npm-*/node_modules/carbon-components ${PWD}/Source/@Carbon\"",
    "tls.generate": "openssl req -config localhost.conf -new -x509 -sha256 -newkey rsa:2048 -nodes -keyout localhost.key -days 1024 -out localhost.crt",
    "tls.encrypt": "openssl pkcs12 -export -out localhost.pfx -inkey localhost.key -in localhost.crt",
    "tls.macos.sign": "sudo security -v add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain localhost.crt",
    "tls.ubuntu.install": "sudo apt install libnss3-tools --yes",
    "tls.ubuntu.store": "pk12util -d \"sql:${HOME}/.pki/nssdb\" -i localhost.pfx",
    "tls.ubuntu.approve": "certutil -d sql:${HOME}/.pki/nssdb -A -t \"P,,\" -n \"Development Certificate\" -i localhost.crt"
}
